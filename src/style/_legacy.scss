///////////////////////////////////////////////////////////
// Manual controll over grid resize
// Was used in InvetoryGui.vue
// I don't want to trash it
// With the formula below
// .specialization {
//   grid-column: col 1 / span 3;
//   grid-row: row 1;
// }
// .primary {
//   grid-column: col 1 / span 1;
//   grid-row: row 2;
// }

// .secondary {
//   grid-column: col 2 / span 1;
//   grid-row: row 2;
// }

// .pistol {
//   grid-column: col 3 / span 1;
//   grid-row: row 2;
// }

// .mask {
//   grid-column: col 1 / span 1;
//   grid-row: row 3;
// }

// .backpack {
//   grid-column: col 2 / span 1;
//   grid-row: row 3;
// }

// .chest {
//   grid-column: col 3 / span 1;
//   grid-row: row 3;
// }

// .gloves {
//   grid-column: col 1 / span 1;
//   grid-row: row 4;
// }

// .holster {
//   grid-column: col 2 / span 1;
//   grid-row: row 4;
// }

// .kneepads {
//   grid-column: col 3 / span 1;
//   grid-row: row 4;
// }

// $slots: (
//   "primary" (1, 2),
//   "secondary" (2, 2),
//   "pistol" (3, 2),
//   "mask" (1, 3),
//   "backpack" (2, 3),
//   "chest" (3, 3),
//   "gloves" (1, 4),
//   "holster" (2, 4),
//   "kneepads" (3, 4)
// );

// @for $idx from 1 through length($slots) {
//   $slot: nth($slots, $idx);
//   $slotClass: nth($slot, 1);
//   $values: nth($slot, 2);

//   .#{$slotClass} {
//     $col: nth($values, 1);
//     $row: nth($values, 2);

//     $newCol: (($idx - 1) % 2) + 1;
//     $col: $newCol;
//     // $row: math.floor($idx / 2) + 2;
//     $row: math.floor(($idx + 1) / 2) + 1;

//     @include media(">=tablet", "<=laptop") {
//       grid-column: col #{$col} #{" / "} span 1;
//       grid-row: row #{$row};
//     }
//   }
// }
